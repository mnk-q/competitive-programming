{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Initial template": {
		"prefix": "init",
		"body": [
		  "#include <bits/stdc++.h>",
		  "#define ll long long int",
		  "#define pb push_back",
		  "#define mk(a,b) make_pair(a,b)",
		  "#define vi vector<int>",
		  "#define vll vector<long long int>",
		  "#define all(a) (a).begin(), (a).end()",
		  "#define ifill(v) for(int &x: v) cin>>x",
		  "#define lfill(v) for(long long int &x: v) cin>>x",
		  "#define endl \"\\n\"",
		  "#define md 1000000007",
		  "",
		  "using namespace std;",
		  "int main()",
		  "{",
		  "    ios_base::sync_with_stdio(false);",
		  "    cin.tie(NULL);",
		  "    $0",
		  "    return 0;",
		  "}"
		],
		"description": "Initial template"
	  },
	  "Testcase": {
		"prefix": "testcase",
		"body": [
		  "int t;",
		  "cin>>t;",
		  "while(t--){",
		  "\t$0",
		  "\tif(t) cout<<\"\\n\";",
		  "}"
		],
		"description": "Testcase"
	  }
}