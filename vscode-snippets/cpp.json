{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"init": {
		"prefix": "init",
		"body": [
		  "#include \"bits/stdc++.h\"",
		  "using namespace std;",
		  "using ll = long long;",
		  "using vi = vector<int>;",
		  "using vvi = vector<vi>;",
		  "using vll = vector<ll>;",
		  "using vvll = vector<vll>;",
		  "using vb = vector<bool>;",
		  "using vvb = vector<vb>;",
		  "using vd = vector<double>;",
		  "using vs = vector<string>;",
		  " ",
		  "using pii = pair<int, int>;",
		  "using pll = pair<ll, ll>;",
		  "using pdd = pair<double, double>;",
		  " ",
		  "using vpii = vector<pii>;",
		  "using vpll = vector<pll>;",
		  "using vpdd = vector<pdd>;",
		  "#define all(a) (a).begin(), (a).end()",
		  "template<typename T> void in(T & a){for(auto &x:a) cin >> x;}",
		  "template<typename T> void out(T a){for(auto x: a){cout << x << \" \" ;}cout << \"\\n\";}",
		  "#define endl \"\\n\"",
		  "const int md = 1000000007;",
		  "const int INF = 1e9+1;",
		  "const int SIZE = 1500001;",
		  "template<typename... Args>",
		  "void readln(Args&... args)",
		  "{",
		  "\t((cin >> args), ...);",
		  "}",
		  " ",
		  
		  "template<typename... Args>",
		  "void writeln(Args... args)",
		  "{",
		  "    ((cout << args << \" \"), ...);",
		  "}",
		  "",
		  "int main()",
		  "{",
		  "    ios_base::sync_with_stdio(false);",
		  "    cin.tie(NULL);",
		  "    $0",
		  "    return 0;",
		  "}"
		],
		"description": "init"
	  },
	  "Testcases" : {
		"prefix": "testcase",
		"body": [
		  "int t;",
		  "cin >> t;",
		  "while(t--){",
		  "    $0",
		  "}",
		]
	  },
	  "USACO FILE IO" : {
		"prefix": "fileio",
		"body": [
		  "freopen(\"${1:file}.in\", \"r\", stdin);",
		  "freopen(\"${1:file}.out\", \"w\", stdout);",
		]
	  },
	  
}